---
- name: Create Topology Using Vagrant
  hosts: localhost
  gather_facts: false
  tasks:
      - include_vars:
            file: vars/hypervisor.yml
      - include_vars:
            file: vars/provision.yml
      - requests_get:
            url: "http://{{server}}/network_ui/topology_yaml?topology_id={{topology_id}}"
            output: topology.yml
      - add_ports:
            range_start: "{{udp_port_range_start}}"
            input: topology.yml
            output: topology.yml
      - jinja:
            template: templates/Vagrantfile.j2
            context: topology.yml
            output: Vagrantfile
      - generate_host_vars:
            data: topology.yml
            host_vars_directory: host_vars
      - vagrant_up:
      - vagrant_ssh_config:
            output: ssh-config
      - convert_ssh_config_to_ansible_inventory2:
            data: topology.yml
            ssh_config: ssh-config
            output: hosts
      - clear_nats:
            input: topology.yml
            output: topology.yml
      - add_mgmt_ip:
            ssh_config: ssh-config
            input: topology.yml
            output: topology.yml
            nat_ip: "{{nat_ip}}"
            port_range_start: "{{mgmt_port_range_start}}"
      - add_nat:
            ssh_config: ssh-config
            input: topology.yml
            output: topology.yml
            nat_ip: "{{nat_ip}}"
            port: "{{web_port}}"
            nat_port: "{{web_port}}"
            host: Host1
      - add_cli_connection:
            ssh_config: ssh-config
            input: topology.yml
            output: topology.yml
            use_nat: true
            ssh_key: key
      - add_ip_addresses:
            supernet: "{{supernet}}"
            subnet_size: "{{subnet_size}}"
            input: topology.yml
            output: topology.yml
      - generate_reachable:
            input: topology.yml
            output: ip_addresses.yml
      - add_router_id:
            input: topology.yml
            output: topology.yml
            router_id_range: "{{router_id_range}}"
      - generate_host_vars:
            host_vars_directory: host_vars
            data: topology.yml
      - generate_csvs:
            data: topology.yml
      - jinja:
            template: templates/iptables.j2
            context: topology.yml
            output: iptables.rules
      - jinja:
            template: templates/iptables_remove.j2
            context: topology.yml
            output: iptables_remove.rules
      - jinja:
            template: templates/nat_hosts_with_groups.j2
            context: topology.yml
            output: nat_hosts
      - local_shell:
            command: chmod +x iptables.rules
      - local_shell:
            command: chmod +x iptables_remove.rules
      - local_shell:
            command: ./iptables.rules
      - local_shell:
            command: cp topology.yml group_vars/all
